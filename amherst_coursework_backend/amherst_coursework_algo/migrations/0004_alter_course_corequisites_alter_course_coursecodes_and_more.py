# Generated by Django 5.1.7 on 2025-10-24 05:30

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("amherst_coursework_algo", "0003_alter_section_section_number"),
    ]

    operations = [
        migrations.AlterField(
            model_name="course",
            name="corequisites",
            field=models.ManyToManyField(
                blank=True,
                help_text="Courses that must be taken concurrently. Self-referential, symmetrical relationship.",
                to="amherst_coursework_algo.course",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="courseCodes",
            field=models.ManyToManyField(
                help_text="Official course codes/numbers (e.g., 'COSC-111', 'MATH-271'). Multiple codes possible for cross-listed courses.",
                related_name="courses",
                to="amherst_coursework_algo.coursecode",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="courseDescription",
            field=models.TextField(
                blank=True,
                help_text="Detailed description of course content, objectives, and requirements. Can be blank.",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="courseLink",
            field=models.URLField(
                blank=True,
                help_text="Direct URL to the course page on Amherst College's course catalog. Defaults to null if not provided.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="courseMaterialsLink",
            field=models.URLField(
                blank=True,
                help_text="URL to course materials, syllabus, or additional resources. Defaults to null if not provided.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="courseName",
            field=models.CharField(
                help_text="Full title of the course as it appears in the course catalog. Maximum length: 200 characters.",
                max_length=200,
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="credits",
            field=models.IntegerField(
                choices=[(2, "2 credits"), (4, "4 credits")],
                default=4,
                help_text="Number of credits awarded for completing the course. Choices: 2 or 4 credits. Defaults to 4.",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="departments",
            field=models.ManyToManyField(
                help_text="Academic departments offering the course.",
                related_name="courses",
                to="amherst_coursework_algo.department",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="divisions",
            field=models.ManyToManyField(
                help_text="Academic divisions the course belongs to (e.g., 'Science', 'Humanities').",
                related_name="courses",
                to="amherst_coursework_algo.division",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="enrollmentText",
            field=models.TextField(
                default="Contact the professor for enrollment details.",
                help_text="Instructions for course enrollment and registration. Defaults to 'Contact the professor for enrollment details.'",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="fallOfferings",
            field=models.ManyToManyField(
                blank=True,
                help_text="Years the course is offered in fall semester.",
                related_name="fOfferings",
                to="amherst_coursework_algo.year",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="freshmanCap",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Maximum number of freshmen allowed to enroll. Defaults to 0 (no cap).",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="id",
            field=models.IntegerField(
                help_text="Unique 7-digit course identifier. Format: XYYZCZZ where: X: College/semester (4=Amherst Fall, 5=Amherst Spring), YY: Department code (00-99), Z: Credit flag (1=half-credit, 0=full-credit), CZZ: Course number (000-999). Example: 4140112 = Fall COSC-112",
                primary_key=True,
                serialize=False,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(9999999),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="janOfferings",
            field=models.ManyToManyField(
                blank=True,
                help_text="Years the course is offered in January term.",
                related_name="jOfferings",
                to="amherst_coursework_algo.year",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="juniorCap",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Maximum number of juniors allowed to enroll. Defaults to 0 (no cap).",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="keywords",
            field=models.ManyToManyField(
                help_text="Searchable keywords/tags associated with the course content.",
                related_name="courses",
                to="amherst_coursework_algo.keyword",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="overallCap",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Maximum total enrollment limit. Defaults to 0 (no cap).",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="placement_course",
            field=models.ForeignKey(
                blank=True,
                help_text="Reference to a placement test or course required. Self-referential relationship.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="placement_for",
                to="amherst_coursework_algo.course",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="prefForMajor",
            field=models.BooleanField(
                default=False,
                help_text="Whether majors have enrollment priority. Defaults to False.",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="prereqDescription",
            field=models.TextField(
                blank=True,
                help_text="Text description of prerequisites and requirements. Can be blank.",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="professor_override",
            field=models.BooleanField(
                default=False,
                help_text="Whether professors can override prerequisite requirements. Defaults to False.",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="professors",
            field=models.ManyToManyField(
                help_text="Professors teaching the course.",
                related_name="courses",
                to="amherst_coursework_algo.professor",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="recommended_courses",
            field=models.ManyToManyField(
                blank=True,
                help_text="Courses recommended but not required as prerequisites. Self-referential relationship.",
                related_name="recommended_for",
                to="amherst_coursework_algo.course",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="seniorCap",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Maximum number of seniors allowed to enroll. Defaults to 0 (no cap).",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="sophomoreCap",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Maximum number of sophomores allowed to enroll. Defaults to 0 (no cap).",
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="springOfferings",
            field=models.ManyToManyField(
                blank=True,
                help_text="Years the course is offered in spring semester.",
                related_name="sOfferings",
                to="amherst_coursework_algo.year",
            ),
        ),
        migrations.AlterField(
            model_name="coursecode",
            name="value",
            field=models.CharField(
                help_text="The 8-9 character course code (e.g., 'COSC-111', 'CHEM-165L'). Must follow department code + hyphen + number format.",
                max_length=9,
                validators=[
                    django.core.validators.MinLengthValidator(8),
                    django.core.validators.MaxLengthValidator(9),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="department",
            name="code",
            field=models.CharField(
                help_text="The 4-letter department code (e.g., 'COSC', 'BCBP')",
                max_length=4,
                validators=[
                    django.core.validators.MinLengthValidator(4),
                    django.core.validators.MaxLengthValidator(4),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="department",
            name="link",
            field=models.URLField(
                help_text="The link to the department page on amherst.edu"
            ),
        ),
        migrations.AlterField(
            model_name="department",
            name="name",
            field=models.CharField(
                help_text="The full name of the department (e.g., 'Computer Science', 'Biology')",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="division",
            name="name",
            field=models.CharField(
                help_text="The full name of the division (e.g., 'Science & Mathematics', 'Social Sciences')",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="prerequisiteset",
            name="courses",
            field=models.ManyToManyField(
                help_text="One set of courses that can be completed to satisfy prerequisites",
                to="amherst_coursework_algo.course",
            ),
        ),
        migrations.AlterField(
            model_name="prerequisiteset",
            name="prerequisite_for",
            field=models.ForeignKey(
                default=None,
                help_text="Course this set of prerequisites is for",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="required_courses",
                to="amherst_coursework_algo.course",
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="friday_end_time",
            field=models.TimeField(help_text="End time for Friday meeting", null=True),
        ),
        migrations.AlterField(
            model_name="section",
            name="friday_start_time",
            field=models.TimeField(
                help_text="Start time for Friday meeting", null=True
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="monday_end_time",
            field=models.TimeField(help_text="End time for Monday meeting", null=True),
        ),
        migrations.AlterField(
            model_name="section",
            name="monday_start_time",
            field=models.TimeField(
                help_text="Start time for Monday meeting", null=True
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="saturday_end_time",
            field=models.TimeField(
                help_text="End time for Saturday meeting", null=True
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="saturday_start_time",
            field=models.TimeField(
                help_text="Start time for Saturday meeting", null=True
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="section_number",
            field=models.CharField(
                default="1",
                help_text="Section number (digits or L for lab)",
                max_length=3,
                validators=[
                    django.core.validators.RegexValidator(
                        code="invalid_section_number",
                        message="Section number must be 2 digits optionally followed by a capital letter",
                        regex="^\\d{2}[A-Z]?$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="sunday_end_time",
            field=models.TimeField(help_text="End time for Sunday meeting", null=True),
        ),
        migrations.AlterField(
            model_name="section",
            name="sunday_start_time",
            field=models.TimeField(
                help_text="Start time for Sunday meeting", null=True
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="thursday_end_time",
            field=models.TimeField(
                help_text="End time for Thursday meeting", null=True
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="thursday_start_time",
            field=models.TimeField(
                help_text="Start time for Thursday meeting", null=True
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="tuesday_end_time",
            field=models.TimeField(help_text="End time for Tuesday meeting", null=True),
        ),
        migrations.AlterField(
            model_name="section",
            name="tuesday_start_time",
            field=models.TimeField(
                help_text="Start time for Tuesday meeting", null=True
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="wednesday_end_time",
            field=models.TimeField(
                help_text="End time for Wednesday meeting", null=True
            ),
        ),
        migrations.AlterField(
            model_name="section",
            name="wednesday_start_time",
            field=models.TimeField(
                help_text="Start time for Wednesday meeting", null=True
            ),
        ),
        migrations.AlterField(
            model_name="year",
            name="year",
            field=models.IntegerField(
                help_text="Academic year (e.g., 2021)",
                validators=[django.core.validators.MinValueValidator(1900)],
            ),
        ),
    ]
