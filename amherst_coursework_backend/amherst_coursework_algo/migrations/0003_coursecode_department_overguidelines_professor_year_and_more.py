# Generated by Django 5.1.1 on 2025-01-04 03:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        (
            "amherst_coursework_algo",
            "0002_course_credit_hours_course_enrollment_limit_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="CourseCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        max_length=8,
                        validators=[
                            django.core.validators.MinLengthValidator(7),
                            django.core.validators.MaxLengthValidator(8),
                        ],
                    ),
                ),
            ],
            options={
                "verbose_name": "Course Code",
                "verbose_name_plural": "Course Codes",
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "code",
                    models.CharField(
                        max_length=4,
                        validators=[
                            django.core.validators.MinLengthValidator(4),
                            django.core.validators.MaxLengthValidator(4),
                        ],
                    ),
                ),
                ("link", models.URLField()),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
            },
        ),
        migrations.CreateModel(
            name="OverGuidelines",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("prefForMajor", models.BooleanField(default=False)),
                ("overallCap", models.PositiveIntegerField(default=0)),
                ("freshmanCap", models.PositiveIntegerField(default=0)),
                ("sophCap", models.PositiveIntegerField(default=0)),
                ("juniorCap", models.PositiveIntegerField(default=0)),
                ("seniorCap", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Overenrollment Guidelines",
                "verbose_name_plural": "Overenrollment Guidelines",
            },
        ),
        migrations.CreateModel(
            name="Professor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Full name of the professor", max_length=100
                    ),
                ),
                (
                    "link",
                    models.URLField(blank=True, help_text="Link to professor's page"),
                ),
            ],
            options={
                "verbose_name": "Professor",
                "verbose_name_plural": "Professors",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Year",
            fields=[
                (
                    "year",
                    models.IntegerField(
                        primary_key=True,
                        serialize=False,
                        validators=[django.core.validators.MinValueValidator(1900)],
                    ),
                ),
                ("link", models.URLField(help_text="Link to course catalog")),
            ],
            options={
                "verbose_name": "Year",
                "verbose_name_plural": "Years",
                "ordering": ["year"],
            },
        ),
        migrations.RenameField(
            model_name="course",
            old_name="title",
            new_name="courseName",
        ),
        migrations.RemoveField(
            model_name="course",
            name="code",
        ),
        migrations.RemoveField(
            model_name="course",
            name="credit_hours",
        ),
        migrations.RemoveField(
            model_name="course",
            name="description",
        ),
        migrations.RemoveField(
            model_name="course",
            name="enrollment_limit",
        ),
        migrations.RemoveField(
            model_name="course",
            name="how_to_handle_overenrollment",
        ),
        migrations.RemoveField(
            model_name="course",
            name="keywords",
        ),
        migrations.RemoveField(
            model_name="course",
            name="professor",
        ),
        migrations.AddField(
            model_name="course",
            name="courseLink",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="course",
            name="credits",
            field=models.IntegerField(
                choices=[(2, "2 credits"), (4, "4 credits")], default=4
            ),
        ),
        migrations.RemoveField(
            model_name="course",
            name="department",
        ),
        migrations.AlterField(
            model_name="course",
            name="id",
            field=models.IntegerField(
                primary_key=True,
                serialize=False,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(9999999),
                ],
            ),
        ),
        migrations.RemoveField(
            model_name="course",
            name="prerequisites",
        ),
        migrations.AddField(
            model_name="course",
            name="courseCodes",
            field=models.ManyToManyField(to="amherst_coursework_algo.coursecode"),
        ),
        migrations.AddField(
            model_name="course",
            name="overGuidelines",
            field=models.ManyToManyField(to="amherst_coursework_algo.overguidelines"),
        ),
        migrations.CreateModel(
            name="PrerequisiteSet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "courses",
                    models.ManyToManyField(to="amherst_coursework_algo.course"),
                ),
            ],
            options={
                "verbose_name": "Prerequisite Set",
                "verbose_name_plural": "Prerequisite Sets",
            },
        ),
        migrations.CreateModel(
            name="Prerequisites",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Text description of prerequisites"
                    ),
                ),
                (
                    "professor_override",
                    models.BooleanField(
                        default=False, help_text="Can professor override prerequisites?"
                    ),
                ),
                (
                    "placement_course",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="placement_for",
                        to="amherst_coursework_algo.course",
                    ),
                ),
                (
                    "recommended_courses",
                    models.ManyToManyField(
                        blank=True,
                        related_name="recommended_for",
                        to="amherst_coursework_algo.course",
                    ),
                ),
                (
                    "required_courses",
                    models.ManyToManyField(
                        blank=True,
                        related_name="required_for",
                        to="amherst_coursework_algo.prerequisiteset",
                    ),
                ),
            ],
            options={
                "verbose_name": "Prerequisites",
                "verbose_name_plural": "Prerequisites",
            },
        ),
        migrations.AddField(
            model_name="course",
            name="professors",
            field=models.ManyToManyField(
                related_name="courses", to="amherst_coursework_algo.professor"
            ),
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "days",
                    models.CharField(
                        help_text="Days of week (e.g., MWF, TR)",
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Days must be combination of M/T/W/R/F",
                                regex="^[MTWRF]+$",
                            )
                        ],
                    ),
                ),
                ("start_time", models.TimeField(help_text="Section start time")),
                ("end_time", models.TimeField(help_text="Section end time")),
                (
                    "location",
                    models.CharField(
                        help_text="Building and room number", max_length=100
                    ),
                ),
                (
                    "professor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sections",
                        to="amherst_coursework_algo.professor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Section",
                "verbose_name_plural": "Sections",
                "ordering": ["days", "start_time"],
            },
        ),
        migrations.AddField(
            model_name="course",
            name="sections",
            field=models.ManyToManyField(to="amherst_coursework_algo.section"),
        ),
        migrations.AddField(
            model_name="course",
            name="fallOfferings",
            field=models.ManyToManyField(
                blank=True, related_name="fOfferings", to="amherst_coursework_algo.year"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="janOfferings",
            field=models.ManyToManyField(
                blank=True, related_name="jOfferings", to="amherst_coursework_algo.year"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="springOfferings",
            field=models.ManyToManyField(
                blank=True, related_name="sOfferings", to="amherst_coursework_algo.year"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="department",
            field=models.ManyToManyField(
                related_name="dept_courses", to="amherst_coursework_algo.department"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="prerequisites",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="prerequisites_for",
                to="amherst_coursework_algo.prerequisites",
            ),
        ),
    ]
